digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x2e6d020 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 0, i32* %retval\l  store i32 0, i32* %a, align 4\l  store i32 1, i32* %b, align 4\l  %call = call i32 @gettimeofday(%struct.timeval* @t_start, %struct.timezone* null) nounwind\l  store i32 1, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x2e6d020 -> Node0x2e6be90;
	Node0x2e6be90 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %i, align 4\l  %cmp = icmp sle i32 %0, 30000\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x2e6be90:s0 -> Node0x2e6bef0;
	Node0x2e6be90:s1 -> Node0x2e690b0;
	Node0x2e6bef0 [shape=record,label="{for.body:                                         \l  %1 = load i32* %a, align 4\l  %2 = load i32* %i, align 4\l  %add = add nsw i32 %1, %2\l  store i32 %add, i32* %a, align 4\l  %3 = load i32* %a, align 4\l  %rem = srem i32 %3, 10\l  %cmp1 = icmp eq i32 %rem, 0\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x2e6bef0:s0 -> Node0x2e6bf50;
	Node0x2e6bef0:s1 -> Node0x2e6bfb0;
	Node0x2e6bf50 [shape=record,label="{if.then:                                          \l  %4 = load i32* %a, align 4\l  %add2 = add nsw i32 %4, 3\l  store i32 %add2, i32* %a, align 4\l  br label %if.end\l}"];
	Node0x2e6bf50 -> Node0x2e6c010;
	Node0x2e6bfb0 [shape=record,label="{if.else:                                          \l  %5 = load i32* %a, align 4\l  %add3 = add nsw i32 %5, 5\l  store i32 %add3, i32* %a, align 4\l  br label %if.end\l}"];
	Node0x2e6bfb0 -> Node0x2e6c010;
	Node0x2e6c010 [shape=record,label="{if.end:                                           \l  br label %for.inc\l}"];
	Node0x2e6c010 -> Node0x2e6c070;
	Node0x2e6c070 [shape=record,label="{for.inc:                                          \l  %6 = load i32* %i, align 4\l  %add4 = add nsw i32 %6, 2\l  store i32 %add4, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x2e6c070 -> Node0x2e6be90;
	Node0x2e690b0 [shape=record,label="{for.end:                                          \l  %7 = load i32* %a, align 4\l  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %7)\l  %call6 = call i32 @gettimeofday(%struct.timeval* @t_end, %struct.timezone* null) nounwind\l  %8 = load i64* getelementptr inbounds (%struct.timeval* @t_end, i32 0, i32 0), align 8\l  %9 = load i64* getelementptr inbounds (%struct.timeval* @t_start, i32 0, i32 0), align 8\l  %sub = sub nsw i64 %8, %9\l  %conv = sitofp i64 %sub to double\l  %10 = load i64* getelementptr inbounds (%struct.timeval* @t_end, i32 0, i32 1), align 8\l  %11 = load i64* getelementptr inbounds (%struct.timeval* @t_start, i32 0, i32 1), align 8\l  %sub7 = sub nsw i64 %10, %11\l  %conv8 = sitofp i64 %sub7 to double\l  %div = fdiv double %conv8, 1.000000e+06\l  %add9 = fadd double %conv, %div\l  store double %add9, double* @t_diff, align 8\l  %12 = load double* @t_diff, align 8\l  %call10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str1, i32 0, i32 0), double %12)\l  %13 = load i32* %a, align 4\l  ret i32 %13\l}"];
}
